name: Create Release

on:
  workflow_call:
    secrets:
      token:
        required: true

jobs:
  tag:
    name: Create Tag
    runs-on: ubuntu-latest

    outputs:
      version: ${{ steps.version.outputs.version }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Extract Version from Branch
        id: version
        run: |
          BRANCH=${GITHUB_REF#refs/heads/}
          VERSION=${BRANCH#release/}
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Create and Push Tag
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git tag ${{ steps.version.outputs.version }}
          git push origin ${{ steps.version.outputs.version }}

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs:
      - tag

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Generate Release Notes
        run: |
          # Get commits since last tag
          PREVIOUS_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
          if [ -n "$PREVIOUS_TAG" ]; then
            CHANGELOG=$(git log --pretty=format:"- %s (%h)" $PREVIOUS_TAG..HEAD)
          else
            CHANGELOG=$(git log --pretty=format:"- %s (%h)")
          fi
          
          # Create release notes
          cat > release_notes.md << EOF
          ## What's Changed
          
          $CHANGELOG
          
          **Full Changelog**: https://github.com/${{ github.repository }}/compare/$PREVIOUS_TAG...${{ steps.version.outputs.version }}
          EOF

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ needs.tag.outputs.version }}
          name: Release ${{ needs.tag.outputs.version }}
          body_path: release_notes.md
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.token }}
